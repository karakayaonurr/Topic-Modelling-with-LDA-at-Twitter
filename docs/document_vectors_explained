Gensim automatically filters probability distributions below a certain threshold (0.01)
Due to this threshold, document vectors are created as sparse vectors where the probability
distributions for values below the threshold are omitted. The sparse vectors can be evaluated 
but only against the non-zero values. This is why it's still possible to evaluate two mis-aligned 
vectors. 

doc_lda = lda_model[doc_bow]
dense_vec = gensim.matutils.sparse2full(doc_lda, lda_model.num_topics)
print(dense_vec)

Sparse vector for user: 31964589

[ 0.19310193  0.          0.          0.01346213  0.          0.          0.
  0.          0.          0.          0.          0.          0.          0.
  0.          0.05593864  0.          0.          0.          0.
  0.07155953  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.06921643  0.          0.          0.
  0.          0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.          0.
  0.          0.01999397  0.          0.          0.          0.
  0.03461606  0.          0.          0.          0.          0.12362228
  0.          0.          0.02533465  0.          0.          0.02288156
  0.          0.          0.          0.          0.          0.
  0.19411033  0.          0.          0.          0.          0.
  0.03519217  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.          0.
  0.        ]

In order to create a dense vector using Gensim and the LDA model, the threshold value limitation must be ignored.
The probability distributions of this new dense vector add up to 1(profile).

doc_lda = get_doc_topics(lda_model, doc_bow)
dense_vec = gensim.matutils.sparse2full(doc_lda, lda_model.num_topics)
print(dense_vec)

def get_doc_topics(lda, bow):
    gamma, _ = lda.inference([bow])
    topic_dist = gamma[0] / sum(gamma[0])
    return [(topic_id, topic_value) for topic_id, topic_value in enumerate(topic_dist)]

Dense vector for user: 31964589
[  1.93012506e-01   9.41034965e-03   6.59972476e-03   1.34597076e-02
   7.02948449e-03   1.21182745e-06   5.87757968e-04   1.21182745e-06
   1.21182745e-06   4.82373126e-03   1.21182745e-06   1.21182745e-06
   1.21182745e-06   3.53300275e-04   2.46353215e-03   5.59498481e-02
   5.55993663e-03   1.27144356e-03   7.17518572e-03   8.47782381e-03
   7.15422630e-02   6.43975195e-03   4.06469032e-03   1.21182745e-06
   1.21182745e-06   1.21182745e-06   3.02543311e-04   1.21182745e-06
   1.05033326e-03   5.72475197e-04   6.92183748e-02   1.21182745e-06
   1.65301492e-03   5.11416886e-03   1.21182745e-06   1.29206615e-04
   1.21182745e-06   8.59131943e-03   1.21182745e-06   1.21182745e-06
   1.21182745e-06   1.36276509e-03   1.21182745e-06   1.21182745e-06
   1.21182745e-06   1.21182745e-06   1.21182745e-06   4.73253924e-04
   1.59086136e-03   1.99938528e-02   1.21182745e-06   1.83757264e-04
   3.98486014e-03   3.86562315e-03   3.46058533e-02   1.21182745e-06
   1.21182745e-06   1.21182745e-06   1.21182745e-06   1.23631313e-01
   1.21182745e-06   1.21182745e-06   2.53190584e-02   1.21182745e-06
   1.75740989e-03   2.28833798e-02   1.21182745e-06   1.21182745e-06
   1.21182745e-06   1.48053427e-04   9.83331585e-04   3.40393884e-03
   1.94106698e-01   8.67876224e-04   9.46295261e-03   4.08490770e-04
   1.21182745e-06   1.13613124e-03   3.51799317e-02   1.21182745e-06
   1.06370787e-03   6.94854010e-04   2.58684577e-03   1.21182745e-06
   1.21182745e-06   3.58896417e-04   1.21182745e-06   4.56224196e-03
   1.33581029e-03   1.68792892e-03   1.21182745e-06   5.06006088e-03
   1.21182745e-06   4.27651266e-03   1.21182745e-06   1.21182745e-06
   1.21182745e-06   5.49129792e-04   7.57002924e-03   1.21182745e-06]


